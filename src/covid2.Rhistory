roc.cor.lw8 <- mat2listw(roc.cor.mat8)
roc.cor.lw9 <- mat2listw(roc.cor.mat9)
roc.cor.lw95 <- mat2listw(roc.cor.mat95)
plot(counties$geometry, border = "grey")
plot(centroids, add=T)
# plot(roc.cor.lw0, st_coordinates(centroids), add=T)
# plot(roc.cor.lw4, st_coordinates(centroids), add=T)
# plot(roc.cor.lw6, st_coordinates(centroids), lwd = 1, add=T)
plot(roc.cor.lw8, st_coordinates(centroids), lwd = 1, points = F, add=T)
plot(roc.cor.lw9, st_coordinates(centroids), lwd = 4, points = F, add=T)
plot(roc.cor.lw95, st_coordinates(centroids), lwd = 16, points = F, add=T)
# read aggregate fasta file
sequences <- readLines("./data/processedData/genbankSequences.noAmbiguous.mafftout.trimmed.fasta")
## parse individual sequences
### create dataframe with partitioned label and sequence 
#### since sequences are massive, don't try to view in RStudio
##### find lines that start with the > character
ids.index <- which(substr(sequences,1,1)==">")
##### shell dataframe to fill in
seq.df <- data.frame(ID=NA, county=NA, date=NA, sequence=NA)[-1,]
##### loop to parse each sequence, partition labels, and concatenate sequences across many lines
for(i in 1:length(ids.index)){
  seq.df[i,] <- c(
                  gsub(">|County", "", unlist(strsplit(sequences[ids.index[i]], split="_"))),
                  paste(sequences[{ids.index[i]+1}:{if(i==length(ids.index)){length(sequences)}else{ids.index[i+1]-1}}], collapse="")
                  )
}
### extract metadata from larger dataframe
#### easier to work with and view without sequences
metadata <- seq.df %>% select(ID, county, date) %>% mutate(date=as.Date(date))
sequences <- readLines("./data/processedData/subsample.fasta")
ids.index <- which(substr(sequences,1,1)==">")
##### shell dataframe to fill in
seq.df <- data.frame(ID=NA, county=NA, date=NA, sequence=NA)[-1,]
##### loop to parse each sequence, partition labels, and concatenate sequences across many lines
for(i in 1:length(ids.index)){
  seq.df[i,] <- c(
                  gsub(">|County", "", unlist(strsplit(sequences[ids.index[i]], split="_"))),
                  paste(sequences[{ids.index[i]+1}:{if(i==length(ids.index)){length(sequences)}else{ids.index[i+1]-1}}], collapse="")
                  )
}
metadata <- seq.df %>% select(ID, county, date) %>% mutate(date=as.Date(date))
nrow(metadata)
metadata[1:10,]
plot(counties$geometry, border = "grey")
plot(centroids, add=T)
# plot(nb.weighted.neg, st_coordinates(centroids), lwd = 1, lty = 1, col="red", points = F, add=T)
plot(nb.weighted0, st_coordinates(centroids), lwd = 1, points = F, add=T)
plot(nb.weighted4, st_coordinates(centroids), lwd = 4, points = F, add=T)
plot(nb.weighted6, st_coordinates(centroids), lwd = 8, lty = 1, points = F, add=T)
plot(nb.weighted8, st_coordinates(centroids), lwd = 16, points = F, add=T)
nb.weighted8
print(nb.weighted8, zero.policy=TRUE)
which(nb.matrix.weighted8>0.8)
which(nb.matrix.weighted8>0.8, arr.ind=T)
rownames(nb.matrix.weighted8)
nb.matrix.weighted[1:10,]
nb.matrix.weighted8[1:10,]
neighbors.list
summary(neighbors.list)
counties$county
counties$county
which(nb.matrix.weighted8>0.8, arr.ind=T)
which(nb.matrix.weighted8>0.8, arr.ind=T)[1,]
counties$county[c(3,11,39)]
counties$county[c(3,11,39)]%in%metadata$county
metadata$county
gsub(' County', '', counties$county[c(3,11,39)])%in%metadata$county
counties$county[c(3,11,39)]
gsub(' County', '', counties$county[c(3,11,39)])
metapop1 <- gsub(' County', '', counties$county[c(3,11,39)])
which(nb.matrix.weighted8>0.8, arr.ind=T)
gsub(' County', '', counties$county[c(17,27,31)])
metapop2 <- gsub(' County', '', counties$county[c(17,27,31)])
metadata$metapop <- ifelse(metadata$county%in%metapop1, "mp1", ifelse(metadata$county%in%metapop2, "mp2", "mp3"))
metadata[1:10,]
metapop2
metadata[20:50,]
metadata[200:500,]
chosen.seq.df <- full_join(metadata, seq.df%>%mutate(date=as.Date(date)), by=c("ID", "county", "date")) %>%
                  filter(chosen==1) %>% 
                  mutate(seqID = paste0(">",paste(ID, county, date, sep="_"))) %>%
()
chosen.seq.df <- full_join(metadata, seq.df%>%mutate(date=as.Date(date)), by=c("ID", "county", "date"))%>%filter(chosen=1)
nrow(metadata)
chosen.seq.df <- full_join(metadata, seq.df%>%mutate(date=as.Date(date)), by=c("ID", "county", "date"))%>%mutate(seqID = paste0(">", paste(ID, county, date, metapop, sep="_")))%>%select(seqID, sequence)
write.table(chosen.seq.df, file="./data/processedData/subsample_metapop_roc_cor.fasta", sep="\n", col.names=FALSE, row.names=FALSE, quote=FALSE)
west <- c("San Juan", "Whatcom", "Skagit", "Island", "Clallam", "Snohomish", "Jefferson", "Kitsap", "King", "Grays Harbor", "Mason", "Pierce", "Thurston", "Pacific", "Lewis", "Wahkiakum", "Cowlitz", "Skamania", "Clark")
table(west%in%metadata$county)
which(west%in%metadata$county)
which(!west%in%metadata$county)
west <- c("SanJuan", "Whatcom", "Skagit", "Island", "Clallam", "Snohomish", "Jefferson", "Kitsap", "King", "Grays Harbor", "Mason", "Pierce", "Thurston", "Pacific", "Lewis", "Wahkiakum", "Cowlitz", "Skamania", "Clark")
which(!west%in%metadata$county)
unique(metadata$county)
west <- c("SanJuan", "Whatcom", "Skagit", "Island", "Clallam", "Snohomish", "Jefferson", "Kitsap", "King", "GraysHarbor", "Mason", "Pierce", "Thurston", "Pacific", "Lewis", "Wahkiakum", "Cowlitz", "Skamania", "Clark")
unique(counties$county)
west
metadata$metapop <- ifelse(metadata$county%in%west, "west", "east"))
metadata$metapop <- ifelse(metadata$county%in%west, "west", "east")
metadata[1:10,]
which(metadata$metapop=="east")
unique(metadata$county[which(metadata$metapop=="east")])
chosen.seq.df <- full_join(metadata, seq.df%>%mutate(date=as.Date(date)), by=c("ID", "county", "date"))%>%mutate(seqID = paste0(">", paste(ID, county, date, metapop, sep="_")))%>%select(seqID, sequence)
write.table(chosen.seq.df, file="./data/processedData/subsample_metapop_east_west.fasta", sep="\n", col.names=FALSE, row.names=FALSE, quote=FALSE)
metapop.1 <- c(metapop1, metapop2, "Kitsap", "Skagit", "Whatcom")
table(metadata$metapop)
metadata$metapop <- ifelse(metadata$county%in%metapop1, "mp1", ifelse(metadata$county%in%metapop2, "mp2", "mp3"))
table(metadata$metapop)
metadata$metapop <- ifelse(metadata$county%in%metapop.1, "mp1", "mp2")
table(metadata$metapop)
chosen.seq.df <- full_join(metadata, seq.df%>%mutate(date=as.Date(date)), by=c("ID", "county", "date"))%>%mutate(seqID = paste0(">", paste(ID, county, date, metapop, sep="_")))%>%select(seqID, sequence)
write.table(chosen.seq.df, file="./data/processedData/subsample_metapop_roc_cor2.fasta", sep="\n", col.names=FALSE, row.names=FALSE, quote=FALSE)
weeks
i=6
weeks[c(i, i+1)]
weeks[c(i, i+1)]; i=i+1
weeks[c(i, i+1)]; i=i+1
weeks[c(i, i+1)]; i=i+1
weeks[c(i, i+1)]; i=i+1
weeks[c(i, i+1)]; i=i+1
weeks[c(i, i+1)]; i=i+1
weeks[c(i, i+1)]; i=i+1
weeks[c(i, i+1)]; i=i+1
weeks[c(i, i+1)]; i=i+1
weeks[c(i, i+1)]; i=i+1
weeks[c(i, i+1)]; i=i+1
weeks[c(i, i+1)]; i=i+1
weeks[c(i, i+1)]; i=i+1
weeks[c(i, i+1)]; i=i+1
weeks[c(i, i+1)]; i=i+1
weeks[c(i, i+1)]; i=i+1
weeks[c(i, i+1)]; i=i+1
weeks[c(i, i+1)]; i=i+1
weeks[c(i, i+1)]; i=i+1
getwd()
dir()
dir("./output/covid_incidence/satscan/by_week")
list.files("./output/covid_incidence/satscan/by_week")
list.files("./output/covid_incidence/satscan/by_week", full.path=T)
list.files("./output/covid_incidence/satscan/by_week", full=T)
satscan.files <- list.files("./output/covid_incidence/satscan/by_week", full=T)
readLines(satscan.files[1])
satscan.output <- list()
satscan.output[[1]] <- readLines(satscan.files[1])
satscan.output[[1]]
indices <- which(satscan.outpu[[1]]%in%c("CLUSTERS DETECTED", "PARAMETER SETTINGS"))
indices <- which(satscan.output[[1]]%in%c("CLUSTERS DETECTED", "PARAMETER SETTINGS"))
indices
clusters.detected <- satscan.output[[1]][indices[1]:indices[2]-1]
clusters.detected
for(i in 1:length(satscan.files)){satscan.output[[i]] <- readLines(satscan.files[i])}
warnings()
length(satscan.output)
clusters.detected <- list()
for(i in 1:length(satscan.output)){clusters.detected[[i]] <- satscan.output[[i]][which(satscan.output[[1]]%in%c("CLUSTERS DETECTED")):which(satscan.output[[1]]%in%c("PARAMETER SETTINGS"))-1]}
clusters.detected[[1]]
clusters.detected[[2]]
satscan.output[[3]]
for(i in 1:length(satscan.output)){clusters.detected[[i]] <- satscan.output[[i]][which(satscan.output[[i]]%in%c("CLUSTERS DETECTED")):which(satscan.output[[i]]%in%c("PARAMETER SETTINGS"))-1]}
satscan.output[[3]]
clusters.detected[[2]]
grepl("Location IDs included", clusters.detected[[2]])
which(grepl("Location IDs included", clusters.detected[[2]]))
individual.clusters <- c()
for(i in 1:length(clusters.detected)){
loc.indices <- which(grepl("Location IDs included", clusters.detected[[i]]))
overlap.indices <- which(grepl("Overlap with clusters", clusters.detected[[i]]))
each.cluster <- c()
for(ii in 1:length(loc.indices)){
each.cluster[ii] <- clusters.detected[[i]][loc.indices[ii]:overlap.indices[ii]-1]
}
individual.clusters <- c(individual.clusters, each.cluster)
}
warnings()
individual.clusters <- c()
for(i in 1:length(clusters.detected)){
loc.indices <- which(grepl("Location IDs included", clusters.detected[[i]]))
overlap.indices <- which(grepl("Overlap with clusters", clusters.detected[[i]]))
each.cluster <- c()
for(ii in 1:length(loc.indices)){
each.cluster[ii] <- paste(clusters.detected[[i]][loc.indices[ii]:overlap.indices[ii]-1])
}
individual.clusters <- c(individual.clusters, each.cluster)
}
warnings()
individual.clusters <- c()
for(i in 1:length(clusters.detected)){
loc.indices <- which(grepl("Location IDs included", clusters.detected[[i]]))
overlap.indices <- which(grepl("Overlap with clusters", clusters.detected[[i]]))
each.cluster <- c()
for(ii in 1:length(loc.indices)){
each.cluster[ii] <- paste(clusters.detected[[i]][loc.indices[ii]:overlap.indices[ii]-1], collapse="\n")
}
individual.clusters <- c(individual.clusters, each.cluster)
}
individual.clusters
individual.clusters <- c()
for(i in 1:length(clusters.detected)){
loc.indices <- which(grepl("Location IDs included", clusters.detected[[i]]))
overlap.indices <- which(grepl("Overlap with clusters", clusters.detected[[i]]))
each.cluster <- c()
for(ii in 1:length(loc.indices)){
each.cluster[ii] <- paste(clusters.detected[[i]][loc.indices[ii]:overlap.indices[ii]-1], collapse=", ")
}
individual.clusters <- c(individual.clusters, each.cluster)
}
individual.clusters
individual.clusters <- c()
for(i in 1:length(clusters.detected)){
loc.indices <- which(grepl("Location IDs included", clusters.detected[[i]]))
overlap.indices <- which(grepl("Overlap with clusters", clusters.detected[[i]]))
each.cluster <- c()
for(ii in 1:length(loc.indices)){
each.cluster[ii] <- paste(clusters.detected[[i]][loc.indices[ii]:overlap.indices[ii]-1], collapse="")
}
individual.clusters <- c(individual.clusters, each.cluster)
}
individual.clusters
gsub(".*Location IDs included.:", "", individual.clusters[1])
gsub(".*Location IDs included.: ", "", individual.clusters[1])
gsub(".*Location IDs included.: ", "", individual.clusters)
all.clusters <- gsub(".*Location IDs included.: ", "", individual.clusters)
strsplit(all.clusters[1], split="County")
strsplit(all.clusters[2], split="County")
gsub(", ", "", unlist(strsplit(all.clusters[2], split="County")))
gsub(", |[[:space:]]", "", unlist(strsplit(all.clusters[2], split="County")))
for(i in 1:length(all.clusters)){all.clusters[i] <- gsub(", |[[:space:]]", "", unlist(strsplit(all.clusters[i], split="County")))}
warnings()
all.clusters[1]
all.clusters[2]
all.clusters[3]
all.clusters <- gsub(".*Location IDs included.: ", "", individual.clusters)
all.clusters[2]
for(i in 1:length(all.clusters)){all.clusters[i] <- c(gsub(", |[[:space:]]", "", unlist(strsplit(all.clusters[i], split="County"))))}
warnings()
all.clusters <- gsub(".*Location IDs included.: ", "", individual.clusters)
all.clusters[1]
all.clusters[2]
counties.in.clusters <- list()
for(i in 1:length(all.clusters)){counties.in.clusters[[i]] <- c(gsub(", |[[:space:]]", "", unlist(strsplit(all.clusters[i], split="County"))))}
counties.in.clusters[[1]]
counties.in.clusters[[2]]
counties.in.clusters[[3]]
counties.in.clusters[[4]]
unique(counties$county)
gsub(" County", "", unique(counties$county))
cluster.df <- data.frame(county = gsub(" County", "", unique(counties$county)))
dim(cluster.df)
county.names <- gsub(" ", "", gsub(" County", "", unique(counties$county)))
cluster.df <- data.frame(county = county.names)
which(grepl(county.names[1], counties.in.clusters))
which(grepl(county.names[1], counties.in.clusters) & grepl(county.names[2], counties.in.clusters))
counties.in.clusters[[6]]
county.names[c(1,2)]
cluster.df[,county.names[1]] <- NA
names(cluster.df)
county.names <- gsub(" ", "", gsub(" County", "", unique(counties$county)))
cluster.df <- data.frame(county = county.names)
for(i in 1:length(county.names)){
cluster.df[,county.names[i]] <- NA
for(ii in 1:length(county.names)){
cluster.df[county.names[ii],county.names[i]] <- length(which(grepl(county.names[i], counties.in.clusters) & grepl(county.names[ii], counties.in.clusters)))
}
}
cluster.df[1:5,]
county.names <- gsub(" ", "", gsub(" County", "", unique(counties$county)))
cluster.df <- data.frame(county = county.names)
cluster.df[,county.names[1]] <- NA
county.names <- gsub(" ", "", gsub(" County", "", unique(counties$county)))
cluster.df <- data.frame(county = county.names)
for(i in 1:length(county.names)){
cluster.df[,county.names[i]] <- NA
for(ii in 1:length(county.names)){
cluster.df[which(cluster.df$county==county.names[ii]),county.names[i]] <- length(which(grepl(county.names[i], counties.in.clusters) & grepl(county.names[ii], counties.in.clusters)))
}
}
cluster.df[1:5,]
ncol(cluster.df)
cluster.matrix <- as.matrix(cluster.df[,2:40])
rownames(cluster.matrix) <- cluster.df$county
hist(diag(cluster.matrix))
quantile(diag(cluster.matrix))
which(diag(cluster.matrix)>66)
diag(cluster.matrix)
diag(cluster.matrix)[which(diag(cluster.matrix)>66)]
cluster.matrix.nd <- cluster.matrix
diag(cluster.matrix.nd) <- 0
hist(cluster.matrix[lower.tri(cluster.matrix)])
quantile(cluster.matrix[lower.tri(cluster.matrix)])
which(cluster.matrix[lower.tri(cluster.matrix)] >30)
which(cluster.matrix >30 & lower.tri(cluster.matrix))
hist(diag(cluster.matrix.nd))
cluster.matrix.nd[1:5,]
hist(cluster.matrix.nd[lower.tri(cluster.matrix.nd)])
which(cluster.matrix >30 & lower.tri(cluster.matrix), arr.ind=T)
ls()
cluster.matrix
cluster.matrix.nd
cluster.lw <- mat2lw(cluster.matrix.nd)
cluster.lw <- mat2listw(cluster.matrix.nd)
county.names
county.relation <- cbind(unique(counties$county), county.names)
county.relation
row.names(cluster.matrix.nd)
names(county.relation)
row.names(cluster.matrix.nd) <- county.relation[,1]
col.names(cluster.matrix.nd) <- county.relation[,1]
colnames(cluster.matrix.nd) <- county.relation[,1]
cluster.lw <- mat2listw(cluster.matrix.nd)
print(cluster.lw)
39*39
plot(counties$geometry, border = "grey")
plot(centroids, add=T)
plot(cluster.lw, st_coordinates(centroids), lwd = 1, points = F, add=T)
hist(cluster.matrix.nd[lower.tri(cluster.matrix.nd)])
cluster.matrix.nd.50 <- cluster.matrix.nd
cluster.matrix.nd.50[which(cluster.matrix.nd.50<50)] <- 0
cluster.lw50 <- mat2listw(cluster.matrix.nd.50)
plot(counties$geometry, border = "grey")
plot(centroids, add=T)
plot(cluster.lw50, st_coordinates(centroids), lwd = 1, points = F, add=T)
which(cluster.matrix.nd>50, arr.ind=T)
hist(cluster.matrix.nd[lower.tri(cluster.matrix.nd)])
cluster.matrix.nd.40 <- cluster.matrix.nd
cluster.matrix.nd.40[which(cluster.matrix.nd.40<40)] <- 0
which(cluster.matrix.nd>40, arr.ind=T)
plot(counties$geometry, border = "grey")
plot(centroids, add=T)
cluster.lw40 <- mat2listw(cluster.matrix.nd.40)
plot(cluster.lw40, st_coordinates(centroids), lwd = 1, points = F, add=T)
quantile(cluster.matrix.nd)
cluster.matrix.nd.35 <- cluster.matrix.nd
cluster.matrix.nd.35[which(cluster.matrix.nd.35<35)] <- 0
cluster.lw35 <- mat2listw(cluster.matrix.nd.35)
plot(counties$geometry, border = "grey")
plot(centroids, add=T)
plot(cluster.lw35, st_coordinates(centroids), lwd = 1, points = F, add=T)
cluster.matrix.nd.20 <- cluster.matrix.nd
cluster.matrix.nd.20[which(cluster.matrix.nd.20<20)] <- 0
cluster.lw20 <- mat2listw(cluster.matrix.nd.20)
plot(counties$geometry, border = "grey")
plot(centroids, add=T)
plot(cluster.lw20, st_coordinates(centroids), lwd = 1, points = F, add=T)
cluster.matrix.nd.25 <- cluster.matrix.nd
cluster.matrix.nd.25[which(cluster.matrix.nd.25<25)] <- 0
cluster.lw25 <- mat2listw(cluster.matrix.nd.25)
plot(counties$geometry, border = "grey")
plot(centroids, add=T)
plot(cluster.lw25, st_coordinates(centroids), lwd = 1, points = F, add=T)
plot(counties$geometry, border = "grey")
plot(centroids, add=T)
plot(cluster.lw60, st_coordinates(centroids), lwd = 1, points = F, add=T)
plot(cluster.lw50, st_coordinates(centroids), lwd = 1, points = F, add=T)
plot(cluster.lw45, st_coordinates(centroids), lwd = 1, points = F, add=T)
plot(cluster.lw40, st_coordinates(centroids), lwd = 1, points = F, add=T)
plot(cluster.lw35, st_coordinates(centroids), lwd = 1, points = F, add=T)
plot(cluster.lw25, st_coordinates(centroids), lwd = 1, points = F, add=T)
plot(cluster.lw20, st_coordinates(centroids), lwd = 1, points = F, add=T)
cluster.matrix.nd.15 <- cluster.matrix.nd
cluster.matrix.nd.15[which(cluster.matrix.nd.15<15)] <- 0
cluster.lw15 <- mat2listw(cluster.matrix.nd.15)
plot(cluster.lw15, st_coordinates(centroids), lwd = 1, points = F, add=T)
cluster.matrix.nd.10 <- cluster.matrix.nd
cluster.matrix.nd.10[which(cluster.matrix.nd.10<10)] <- 0
cluster.lw10 <- mat2listw(cluster.matrix.nd.10)
plot(cluster.lw10, st_coordinates(centroids), lwd = 1, points = F, add=T)
cluster.matrix.nd.5 <- cluster.matrix.nd
cluster.matrix.nd.5[which(cluster.matrix.nd.5<5)] <- 0
cluster.lw5 <- mat2listw(cluster.matrix.nd.5)
plot(cluster.lw5, st_coordinates(centroids), lwd = 1, points = F, add=T)
cluster.matrix.nd.60 <- cluster.matrix.nd
cluster.matrix.nd.60[which(cluster.matrix.nd.60<60)] <- 0
cluster.lw60 <- mat2listw(cluster.matrix.nd.60)
cluster.matrix.nd.55 <- cluster.matrix.nd
cluster.matrix.nd.55[which(cluster.matrix.nd.55<55)] <- 0
cluster.lw55 <- mat2listw(cluster.matrix.nd.55)
cluster.matrix.nd.45 <- cluster.matrix.nd
cluster.matrix.nd.45[which(cluster.matrix.nd.45<45)] <- 0
cluster.lw45 <- mat2listw(cluster.matrix.nd.45)
cluster.matrix.nd.30 <- cluster.matrix.nd
cluster.matrix.nd.30[which(cluster.matrix.nd.30<30)] <- 0
cluster.lw30 <- mat2listw(cluster.matrix.nd.30)
ls()
sequence.id <- seq(60,5, by=5)
cluster.lws <- c(cluster.lw60, cluster.lw55, cluster.lw50, cluster.lw45, cluster.lw40, cluster.lw35, cluster.lw30, cluster.lw25, cluster.lw20, cluster.lw15, cluster.lw10, cluster.lw5)
sequence.id
sequence.id <- seq(60,5, by=5)
sequence.id <- seq(60,5, by=-5)
sequence.id
cluster.lws
length(cluster.lws)
length(sequence.id)
get("cluster.lw60")
get(paste0("cluster.lw", sequence.id[1]))
i=1
plot(counties$geometry, border = "grey", main = paste0("Spatial Clustering: Counties that Appeared Together more than ", sequence.ids[i], " times"), family = "sans", ps = 12)
plot(centroids, add=T)
plot(get(paste0("cluster.lw", sequence.id[i])), st_coordinates(centroids), lwd = 1, points = F, add=T)  
plot(counties$geometry, border = "grey", main = paste0("Spatial Clustering: Counties that Appeared Together more than ", sequence.id[i], " times"), family = "sans", ps = 12)
plot(centroids, add=T)
plot(get(paste0("cluster.lw", sequence.id[i])), st_coordinates(centroids), lwd = 1, points = F, add=T)  
plot(counties$geometry, border = "grey", main = paste0("Spatial Clustering\nCounties that Appeared Together more than ", sequence.id[i], " times"), family = "sans", ps = 12)
plot(centroids, add=T)
plot(get(paste0("cluster.lw", sequence.id[i])), st_coordinates(centroids), lwd = 1, points = F, add=T)  
saveGIF(
  for(i in 1:length(cluster.lws)){
plot(counties$geometry, border = "grey", main = paste0("Spatial Clustering\nCounties Appearing Together More Than ", sequence.id[i], " Times"), family = "sans", ps = 12)
plot(centroids, add=T)
plot(get(paste0("cluster.lw", sequence.id[i])), st_coordinates(centroids), lwd = 1, points = F, add=T)  
  }, 
  movie.name = "C:/Users/Cody Dailey/Documents/Github Projects/washingtonCountiesCovid19/output/covid_incidence/spatial_clustering_gif.gif", 
  ani.interval = 0.5, 
  ani.width = 1500, 
  ani.height = 1500, 
  ani.res = 300
)
saveGIF(
  for(i in 1:length(sequence.id)){
plot(counties$geometry, border = "grey", main = paste0("Spatial Clustering\nCounties Appearing Together More Than ", sequence.id[i], " Times"), family = "sans", ps = 12)
plot(centroids, add=T)
plot(get(paste0("cluster.lw", sequence.id[i])), st_coordinates(centroids), lwd = 1, points = F, add=T)  
  }, 
  movie.name = "C:/Users/Cody Dailey/Documents/Github Projects/washingtonCountiesCovid19/output/covid_incidence/spatial_clustering_gif.gif", 
  ani.interval = 0.5, 
  ani.width = 1500, 
  ani.height = 1500, 
  ani.res = 300
)
saveGIF(
  for(i in 1:length(sequence.id)){
plot(counties$geometry, border = "grey", main = paste0("Counties Appearing Together More Than ", sequence.id[i], " Times"), family = "sans", ps = 12)
plot(centroids, add=T)
plot(get(paste0("cluster.lw", sequence.id[i])), st_coordinates(centroids), lwd = 1, points = F, add=T)  
  }, 
  movie.name = "C:/Users/Cody Dailey/Documents/Github Projects/washingtonCountiesCovid19/output/covid_incidence/spatial_clustering_gif.gif", 
  ani.interval = 0.5, 
  ani.width = 1500, 
  ani.height = 1500, 
  ani.res = 300
)
saveGIF(
  for(i in 1:length(sequence.id)){
plot(counties$geometry, border = "grey", main = paste0("Counties Appearing Together More Than ", sequence.id[i], " Times"), family = "sans", ps = 12)
plot(centroids, add=T)
plot(get(paste0("cluster.lw", sequence.id[i])), st_coordinates(centroids), lwd = 1, points = F, add=T)  
  }, 
  movie.name = "C:/Users/Cody Dailey/Documents/Github Projects/washingtonCountiesCovid19/output/covid_incidence/spatial_clustering_gif.gif", 
  ani.interval = 0.5, 
  ani.width = 1500, 
  ani.height = 1500, 
  ani.res = 300
)
i=13
sequence.id[13]
dev.off()
saveGIF()
library(animate)
library(animation)
connections()
saveGIF(
  for(i in 1:length(sequence.id)){
plot(counties$geometry, border = "grey", main = paste0("Counties Appearing Together More Than ", sequence.id[i], " Times"), family = "sans", ps = 12)
plot(centroids, add=T)
plot(get(paste0("cluster.lw", sequence.id[i])), st_coordinates(centroids), lwd = 1, points = F, add=T)  
  }, 
  movie.name = "C:/Users/Cody Dailey/Documents/Github Projects/washingtonCountiesCovid19/output/covid_incidence/spatial_clustering_gif.gif", 
  ani.interval = 0.5, 
  ani.width = 1500, 
  ani.height = 1500, 
  ani.res = 300
)
?temp()
?saveGIF()
cluster.matrix.nd.65 <- cluster.matrix.nd
cluster.matrix.nd.65[which(cluster.matrix.nd.65<65)] <- 0
cluster.lw65 <- mat2listw(cluster.matrix.nd.65)
sequence.id <- seq(65, 5, by=-5)
saveGIF(
  for(i in 1:length(sequence.id)){
plot(counties$geometry, border = "grey", main = paste0("Counties Appearing Together More Than ", sequence.id[i], " Times"), family = "sans", ps = 12)
plot(centroids, add=T)
plot(get(paste0("cluster.lw", sequence.id[i])), st_coordinates(centroids), lwd = 1, points = F, add=T)  
  }, 
  movie.name = "C:/Users/Cody Dailey/Documents/Github Projects/washingtonCountiesCovid19/output/covid_incidence/spatial_clustering_gif.gif", 
  ani.interval = 0.5, 
  ani.width = 1500, 
  ani.height = 1500, 
  ani.res = 300
)
saveGIF(
  for(i in 1:length(sequence.id)){
plot(counties$geometry, border = "grey", main = paste0("Counties Appearing Together At Least ", sequence.id[i], " Times"), family = "sans", ps = 12)
plot(centroids, add=T)
plot(get(paste0("cluster.lw", sequence.id[i])), st_coordinates(centroids), lwd = 1, points = F, add=T)  
  }, 
  movie.name = "C:/Users/Cody Dailey/Documents/Github Projects/washingtonCountiesCovid19/output/covid_incidence/spatial_clustering_gif.gif", 
  ani.interval = 0.5, 
  ani.width = 1500, 
  ani.height = 1500, 
  ani.res = 300
)
ls()
metadata
hist(metadata$date)
plot(metadata$date
)
dev.off()
plot(metadata$date)
barplot(metadata$date)
metadata.summary <- metadata %>% group_by(date) %>% summarise(n=n())
barplot(metadata.summary)
barplot(metadata.summary$n~metadata.summary$date)
